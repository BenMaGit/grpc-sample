//
//
// Copyright 2018 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-connect-es v1.0.0-rc1 with parameter "target=ts"
// @generated from file echo.proto (package grpc.examples.echo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { EchoRequest, EchoResponse } from "./echo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Echo is the echo service.
 *
 * @generated from service grpc.examples.echo.Echo
 */
export const Echo = {
  typeName: "grpc.examples.echo.Echo",
  methods: {
    /**
     * UnaryEcho is unary echo.
     *
     * @generated from rpc grpc.examples.echo.Echo.UnaryEcho
     */
    unaryEcho: {
      name: "UnaryEcho",
      I: EchoRequest,
      O: EchoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ServerStreamingEcho is server side streaming.
     *
     * @generated from rpc grpc.examples.echo.Echo.ServerStreamingEcho
     */
    serverStreamingEcho: {
      name: "ServerStreamingEcho",
      I: EchoRequest,
      O: EchoResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ClientStreamingEcho is client side streaming.
     *
     * @generated from rpc grpc.examples.echo.Echo.ClientStreamingEcho
     */
    clientStreamingEcho: {
      name: "ClientStreamingEcho",
      I: EchoRequest,
      O: EchoResponse,
      kind: MethodKind.ClientStreaming,
    },
    /**
     * BidirectionalStreamingEcho is bidi streaming.
     *
     * @generated from rpc grpc.examples.echo.Echo.BidirectionalStreamingEcho
     */
    bidirectionalStreamingEcho: {
      name: "BidirectionalStreamingEcho",
      I: EchoRequest,
      O: EchoResponse,
      kind: MethodKind.BiDiStreaming,
    },
  }
} as const;

